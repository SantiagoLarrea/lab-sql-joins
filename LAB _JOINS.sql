-- LAB SQL JOINS 
USE sakila;
-- 1 List the number of films per category.

SELECT c.name, COUNT(*) AS film_per_category
FROM film f
LEFT JOIN film_category fc
ON f.film_id = fc.film_id
LEFT JOIN category c
ON  fc.category_id = c.category_id
GROUP BY c.name
ORDER BY film_per_category DESC;

-- 2 Retrieve the store ID, city, and country for each store.

SELECT store_id, city, country
FROM store s
LEFT JOIN address a 
ON s.address_id = a.address_id
LEFT JOIN city c 
ON a.city_id = c.city_id
LEFT JOIN country co
ON c.country_id = co.country_id;

-- 3 Calculate the total revenue generated by each store in dollars.

SELECT s.store_id, SUM(amount) as total_revenue
FROM store s 
LEFT JOIN inventory i
ON s.store_id = i.store_id
LEFT JOIN rental r 
ON i.inventory_id = r.inventory_id
LEFT JOIN payment p 
ON r.rental_id = p.rental_id
GROUP BY s.store_id;

-- 4 Determine the average running time of films for each category.
SELECT c.name AS category, AVG(length) AS running_time
FROM film f
LEFT JOIN film_category fc
ON f.film_id = fc.film_id
LEFT JOIN category c
ON  fc.category_id = c.category_id
group by c.name;

-- 5 
SELECT c.name AS category, AVG(length) AS running_time
FROM film f
LEFT JOIN film_category fc
ON f.film_id = fc.film_id
LEFT JOIN category c
ON  fc.category_id = c.category_id
group by c.name
ORDER BY running_time DESC
LIMIT 5;

-- 6
SELECT f.title, COUNT(*) AS rental_count
FROM rental r
INNER JOIN inventory i ON r.inventory_id = i.inventory_id
INNER JOIN film f ON i.film_id = f.film_id
GROUP BY f.title
ORDER BY rental_count DESC
LIMIT 10;

-- 7 Determine if "Academy Dinosaur" can be rented from Store 1
-- Â¿Existe en el inventario de la Store 1?
SELECT COUNT(*) AS copies_in_store1
FROM film f
JOIN inventory i ON i.film_id = f.film_id
WHERE f.title = 'Academy Dinosaur'
  AND i.store_id = 1;
  
 -- 8
 SELECT 
    f.title,
    CASE 
        WHEN IFNULL(i.inventory_id, 0) = 0 THEN 'NOT available'
        ELSE 'Available'
    END AS availability_status
FROM film f
LEFT JOIN inventory i 
       ON f.film_id = i.film_id
GROUP BY f.title, availability_status
ORDER BY f.title;
